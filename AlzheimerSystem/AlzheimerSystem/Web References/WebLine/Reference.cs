//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace AlzheimerSystem.WebLine {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ADwebSoap", Namespace="http://tempuri.org/")]
    public partial class ADweb : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IdentifyForGPSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpecificIndoor1OperationCompleted;
        
        private System.Threading.SendOrPostCallback PosiDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectLoacationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectIndoorOperationCompleted;
        
        private System.Threading.SendOrPostCallback savedateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIndoorCurrentDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveObjectPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpecificAboveIndoorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSelectAboveIndoorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutdoorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIndoorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIndoor1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIndoorCurrentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIndoorAboveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSelectIndoorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpecificIndoorOperationCompleted;
        
        private System.Threading.SendOrPostCallback PictInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback PictSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeArrayElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateINFOOperationCompleted;
        
        private System.Threading.SendOrPostCallback showAddressandCellOperationCompleted;
        
        private System.Threading.SendOrPostCallback isPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update新密碼OperationCompleted;
        
        private System.Threading.SendOrPostCallback CallLineTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback 帳號是否存在OperationCompleted;
        
        private System.Threading.SendOrPostCallback SignOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ADweb() {
            this.Url = global::AlzheimerSystem.Properties.Settings.Default.AlzheimerSystem_WebLine_ADweb;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IdentifyForGPSCompletedEventHandler IdentifyForGPSCompleted;
        
        /// <remarks/>
        public event GetSpecificIndoor1CompletedEventHandler GetSpecificIndoor1Completed;
        
        /// <remarks/>
        public event PosiDataCompletedEventHandler PosiDataCompleted;
        
        /// <remarks/>
        public event SelectLoacationCompletedEventHandler SelectLoacationCompleted;
        
        /// <remarks/>
        public event SelectIndoorCompletedEventHandler SelectIndoorCompleted;
        
        /// <remarks/>
        public event savedateCompletedEventHandler savedateCompleted;
        
        /// <remarks/>
        public event GetIndoorCurrentDateCompletedEventHandler GetIndoorCurrentDateCompleted;
        
        /// <remarks/>
        public event SaveObjectPositionCompletedEventHandler SaveObjectPositionCompleted;
        
        /// <remarks/>
        public event InsertLocationCompletedEventHandler InsertLocationCompleted;
        
        /// <remarks/>
        public event GetSpecificAboveIndoorCompletedEventHandler GetSpecificAboveIndoorCompleted;
        
        /// <remarks/>
        public event GetSelectAboveIndoorCompletedEventHandler GetSelectAboveIndoorCompleted;
        
        /// <remarks/>
        public event GetOutdoorCompletedEventHandler GetOutdoorCompleted;
        
        /// <remarks/>
        public event GetIndoorCompletedEventHandler GetIndoorCompleted;
        
        /// <remarks/>
        public event GetIndoor1CompletedEventHandler GetIndoor1Completed;
        
        /// <remarks/>
        public event GetIndoorCurrentCompletedEventHandler GetIndoorCurrentCompleted;
        
        /// <remarks/>
        public event GetIndoorAboveCompletedEventHandler GetIndoorAboveCompleted;
        
        /// <remarks/>
        public event GetSelectIndoorCompletedEventHandler GetSelectIndoorCompleted;
        
        /// <remarks/>
        public event GetSpecificIndoorCompletedEventHandler GetSpecificIndoorCompleted;
        
        /// <remarks/>
        public event PictInsertCompletedEventHandler PictInsertCompleted;
        
        /// <remarks/>
        public event PictSelectCompletedEventHandler PictSelectCompleted;
        
        /// <remarks/>
        public event ChangeArrayElementsCompletedEventHandler ChangeArrayElementsCompleted;
        
        /// <remarks/>
        public event updateINFOCompletedEventHandler updateINFOCompleted;
        
        /// <remarks/>
        public event showAddressandCellCompletedEventHandler showAddressandCellCompleted;
        
        /// <remarks/>
        public event isPasswordCompletedEventHandler isPasswordCompleted;
        
        /// <remarks/>
        public event Update新密碼CompletedEventHandler Update新密碼Completed;
        
        /// <remarks/>
        public event CallLineTokenCompletedEventHandler CallLineTokenCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event AccountExistCompletedEventHandler AccountExistCompleted;
        
        /// <remarks/>
        public event 帳號是否存在CompletedEventHandler 帳號是否存在Completed;
        
        /// <remarks/>
        public event SignCompletedEventHandler SignCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IdentifyForGPS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IdentifyForGPS(string acc) {
            object[] results = this.Invoke("IdentifyForGPS", new object[] {
                        acc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IdentifyForGPSAsync(string acc) {
            this.IdentifyForGPSAsync(acc, null);
        }
        
        /// <remarks/>
        public void IdentifyForGPSAsync(string acc, object userState) {
            if ((this.IdentifyForGPSOperationCompleted == null)) {
                this.IdentifyForGPSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIdentifyForGPSOperationCompleted);
            }
            this.InvokeAsync("IdentifyForGPS", new object[] {
                        acc}, this.IdentifyForGPSOperationCompleted, userState);
        }
        
        private void OnIdentifyForGPSOperationCompleted(object arg) {
            if ((this.IdentifyForGPSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IdentifyForGPSCompleted(this, new IdentifyForGPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpecificIndoor1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSpecificIndoor1(string acc) {
            object[] results = this.Invoke("GetSpecificIndoor1", new object[] {
                        acc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpecificIndoor1Async(string acc) {
            this.GetSpecificIndoor1Async(acc, null);
        }
        
        /// <remarks/>
        public void GetSpecificIndoor1Async(string acc, object userState) {
            if ((this.GetSpecificIndoor1OperationCompleted == null)) {
                this.GetSpecificIndoor1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecificIndoor1OperationCompleted);
            }
            this.InvokeAsync("GetSpecificIndoor1", new object[] {
                        acc}, this.GetSpecificIndoor1OperationCompleted, userState);
        }
        
        private void OnGetSpecificIndoor1OperationCompleted(object arg) {
            if ((this.GetSpecificIndoor1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecificIndoor1Completed(this, new GetSpecificIndoor1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PosiData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PosiData(string Date, string acc, string place) {
            object[] results = this.Invoke("PosiData", new object[] {
                        Date,
                        acc,
                        place});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PosiDataAsync(string Date, string acc, string place) {
            this.PosiDataAsync(Date, acc, place, null);
        }
        
        /// <remarks/>
        public void PosiDataAsync(string Date, string acc, string place, object userState) {
            if ((this.PosiDataOperationCompleted == null)) {
                this.PosiDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPosiDataOperationCompleted);
            }
            this.InvokeAsync("PosiData", new object[] {
                        Date,
                        acc,
                        place}, this.PosiDataOperationCompleted, userState);
        }
        
        private void OnPosiDataOperationCompleted(object arg) {
            if ((this.PosiDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PosiDataCompleted(this, new PosiDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectLoacation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectLoacation(string date, string acc) {
            object[] results = this.Invoke("SelectLoacation", new object[] {
                        date,
                        acc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectLoacationAsync(string date, string acc) {
            this.SelectLoacationAsync(date, acc, null);
        }
        
        /// <remarks/>
        public void SelectLoacationAsync(string date, string acc, object userState) {
            if ((this.SelectLoacationOperationCompleted == null)) {
                this.SelectLoacationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectLoacationOperationCompleted);
            }
            this.InvokeAsync("SelectLoacation", new object[] {
                        date,
                        acc}, this.SelectLoacationOperationCompleted, userState);
        }
        
        private void OnSelectLoacationOperationCompleted(object arg) {
            if ((this.SelectLoacationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectLoacationCompleted(this, new SelectLoacationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectIndoor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectIndoor(string Date, string timeRange) {
            object[] results = this.Invoke("SelectIndoor", new object[] {
                        Date,
                        timeRange});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectIndoorAsync(string Date, string timeRange) {
            this.SelectIndoorAsync(Date, timeRange, null);
        }
        
        /// <remarks/>
        public void SelectIndoorAsync(string Date, string timeRange, object userState) {
            if ((this.SelectIndoorOperationCompleted == null)) {
                this.SelectIndoorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectIndoorOperationCompleted);
            }
            this.InvokeAsync("SelectIndoor", new object[] {
                        Date,
                        timeRange}, this.SelectIndoorOperationCompleted, userState);
        }
        
        private void OnSelectIndoorOperationCompleted(object arg) {
            if ((this.SelectIndoorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectIndoorCompleted(this, new SelectIndoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/savedate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string savedate(string date_time, string acc) {
            object[] results = this.Invoke("savedate", new object[] {
                        date_time,
                        acc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void savedateAsync(string date_time, string acc) {
            this.savedateAsync(date_time, acc, null);
        }
        
        /// <remarks/>
        public void savedateAsync(string date_time, string acc, object userState) {
            if ((this.savedateOperationCompleted == null)) {
                this.savedateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsavedateOperationCompleted);
            }
            this.InvokeAsync("savedate", new object[] {
                        date_time,
                        acc}, this.savedateOperationCompleted, userState);
        }
        
        private void OnsavedateOperationCompleted(object arg) {
            if ((this.savedateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.savedateCompleted(this, new savedateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIndoorCurrentDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIndoorCurrentDate(string acc) {
            object[] results = this.Invoke("GetIndoorCurrentDate", new object[] {
                        acc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIndoorCurrentDateAsync(string acc) {
            this.GetIndoorCurrentDateAsync(acc, null);
        }
        
        /// <remarks/>
        public void GetIndoorCurrentDateAsync(string acc, object userState) {
            if ((this.GetIndoorCurrentDateOperationCompleted == null)) {
                this.GetIndoorCurrentDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIndoorCurrentDateOperationCompleted);
            }
            this.InvokeAsync("GetIndoorCurrentDate", new object[] {
                        acc}, this.GetIndoorCurrentDateOperationCompleted, userState);
        }
        
        private void OnGetIndoorCurrentDateOperationCompleted(object arg) {
            if ((this.GetIndoorCurrentDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIndoorCurrentDateCompleted(this, new GetIndoorCurrentDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveObjectPosition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveObjectPosition(string cookie, string acc) {
            this.Invoke("SaveObjectPosition", new object[] {
                        cookie,
                        acc});
        }
        
        /// <remarks/>
        public void SaveObjectPositionAsync(string cookie, string acc) {
            this.SaveObjectPositionAsync(cookie, acc, null);
        }
        
        /// <remarks/>
        public void SaveObjectPositionAsync(string cookie, string acc, object userState) {
            if ((this.SaveObjectPositionOperationCompleted == null)) {
                this.SaveObjectPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveObjectPositionOperationCompleted);
            }
            this.InvokeAsync("SaveObjectPosition", new object[] {
                        cookie,
                        acc}, this.SaveObjectPositionOperationCompleted, userState);
        }
        
        private void OnSaveObjectPositionOperationCompleted(object arg) {
            if ((this.SaveObjectPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveObjectPositionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertLocation(string DateTime, double Longtitude, double Latitude, string Account) {
            object[] results = this.Invoke("InsertLocation", new object[] {
                        DateTime,
                        Longtitude,
                        Latitude,
                        Account});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLocationAsync(string DateTime, double Longtitude, double Latitude, string Account) {
            this.InsertLocationAsync(DateTime, Longtitude, Latitude, Account, null);
        }
        
        /// <remarks/>
        public void InsertLocationAsync(string DateTime, double Longtitude, double Latitude, string Account, object userState) {
            if ((this.InsertLocationOperationCompleted == null)) {
                this.InsertLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLocationOperationCompleted);
            }
            this.InvokeAsync("InsertLocation", new object[] {
                        DateTime,
                        Longtitude,
                        Latitude,
                        Account}, this.InsertLocationOperationCompleted, userState);
        }
        
        private void OnInsertLocationOperationCompleted(object arg) {
            if ((this.InsertLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLocationCompleted(this, new InsertLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpecificAboveIndoor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSpecificAboveIndoor(string Date, string acc) {
            object[] results = this.Invoke("GetSpecificAboveIndoor", new object[] {
                        Date,
                        acc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpecificAboveIndoorAsync(string Date, string acc) {
            this.GetSpecificAboveIndoorAsync(Date, acc, null);
        }
        
        /// <remarks/>
        public void GetSpecificAboveIndoorAsync(string Date, string acc, object userState) {
            if ((this.GetSpecificAboveIndoorOperationCompleted == null)) {
                this.GetSpecificAboveIndoorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecificAboveIndoorOperationCompleted);
            }
            this.InvokeAsync("GetSpecificAboveIndoor", new object[] {
                        Date,
                        acc}, this.GetSpecificAboveIndoorOperationCompleted, userState);
        }
        
        private void OnGetSpecificAboveIndoorOperationCompleted(object arg) {
            if ((this.GetSpecificAboveIndoorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecificAboveIndoorCompleted(this, new GetSpecificAboveIndoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSelectAboveIndoor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSelectAboveIndoor(string Date, string timeRange, string acc) {
            object[] results = this.Invoke("GetSelectAboveIndoor", new object[] {
                        Date,
                        timeRange,
                        acc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSelectAboveIndoorAsync(string Date, string timeRange, string acc) {
            this.GetSelectAboveIndoorAsync(Date, timeRange, acc, null);
        }
        
        /// <remarks/>
        public void GetSelectAboveIndoorAsync(string Date, string timeRange, string acc, object userState) {
            if ((this.GetSelectAboveIndoorOperationCompleted == null)) {
                this.GetSelectAboveIndoorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSelectAboveIndoorOperationCompleted);
            }
            this.InvokeAsync("GetSelectAboveIndoor", new object[] {
                        Date,
                        timeRange,
                        acc}, this.GetSelectAboveIndoorOperationCompleted, userState);
        }
        
        private void OnGetSelectAboveIndoorOperationCompleted(object arg) {
            if ((this.GetSelectAboveIndoorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSelectAboveIndoorCompleted(this, new GetSelectAboveIndoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOutdoor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOutdoor(string Acc, string Date) {
            object[] results = this.Invoke("GetOutdoor", new object[] {
                        Acc,
                        Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutdoorAsync(string Acc, string Date) {
            this.GetOutdoorAsync(Acc, Date, null);
        }
        
        /// <remarks/>
        public void GetOutdoorAsync(string Acc, string Date, object userState) {
            if ((this.GetOutdoorOperationCompleted == null)) {
                this.GetOutdoorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutdoorOperationCompleted);
            }
            this.InvokeAsync("GetOutdoor", new object[] {
                        Acc,
                        Date}, this.GetOutdoorOperationCompleted, userState);
        }
        
        private void OnGetOutdoorOperationCompleted(object arg) {
            if ((this.GetOutdoorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutdoorCompleted(this, new GetOutdoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIndoor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetIndoor(string Date) {
            object[] results = this.Invoke("GetIndoor", new object[] {
                        Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetIndoorAsync(string Date) {
            this.GetIndoorAsync(Date, null);
        }
        
        /// <remarks/>
        public void GetIndoorAsync(string Date, object userState) {
            if ((this.GetIndoorOperationCompleted == null)) {
                this.GetIndoorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIndoorOperationCompleted);
            }
            this.InvokeAsync("GetIndoor", new object[] {
                        Date}, this.GetIndoorOperationCompleted, userState);
        }
        
        private void OnGetIndoorOperationCompleted(object arg) {
            if ((this.GetIndoorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIndoorCompleted(this, new GetIndoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIndoor1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetIndoor1(string Date, string acc) {
            object[] results = this.Invoke("GetIndoor1", new object[] {
                        Date,
                        acc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetIndoor1Async(string Date, string acc) {
            this.GetIndoor1Async(Date, acc, null);
        }
        
        /// <remarks/>
        public void GetIndoor1Async(string Date, string acc, object userState) {
            if ((this.GetIndoor1OperationCompleted == null)) {
                this.GetIndoor1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIndoor1OperationCompleted);
            }
            this.InvokeAsync("GetIndoor1", new object[] {
                        Date,
                        acc}, this.GetIndoor1OperationCompleted, userState);
        }
        
        private void OnGetIndoor1OperationCompleted(object arg) {
            if ((this.GetIndoor1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIndoor1Completed(this, new GetIndoor1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIndoorCurrent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetIndoorCurrent(string acc) {
            object[] results = this.Invoke("GetIndoorCurrent", new object[] {
                        acc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetIndoorCurrentAsync(string acc) {
            this.GetIndoorCurrentAsync(acc, null);
        }
        
        /// <remarks/>
        public void GetIndoorCurrentAsync(string acc, object userState) {
            if ((this.GetIndoorCurrentOperationCompleted == null)) {
                this.GetIndoorCurrentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIndoorCurrentOperationCompleted);
            }
            this.InvokeAsync("GetIndoorCurrent", new object[] {
                        acc}, this.GetIndoorCurrentOperationCompleted, userState);
        }
        
        private void OnGetIndoorCurrentOperationCompleted(object arg) {
            if ((this.GetIndoorCurrentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIndoorCurrentCompleted(this, new GetIndoorCurrentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIndoorAbove", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetIndoorAbove(string Date, string acc) {
            object[] results = this.Invoke("GetIndoorAbove", new object[] {
                        Date,
                        acc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetIndoorAboveAsync(string Date, string acc) {
            this.GetIndoorAboveAsync(Date, acc, null);
        }
        
        /// <remarks/>
        public void GetIndoorAboveAsync(string Date, string acc, object userState) {
            if ((this.GetIndoorAboveOperationCompleted == null)) {
                this.GetIndoorAboveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIndoorAboveOperationCompleted);
            }
            this.InvokeAsync("GetIndoorAbove", new object[] {
                        Date,
                        acc}, this.GetIndoorAboveOperationCompleted, userState);
        }
        
        private void OnGetIndoorAboveOperationCompleted(object arg) {
            if ((this.GetIndoorAboveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIndoorAboveCompleted(this, new GetIndoorAboveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSelectIndoor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSelectIndoor(string Date, string timeRange, string acc) {
            object[] results = this.Invoke("GetSelectIndoor", new object[] {
                        Date,
                        timeRange,
                        acc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSelectIndoorAsync(string Date, string timeRange, string acc) {
            this.GetSelectIndoorAsync(Date, timeRange, acc, null);
        }
        
        /// <remarks/>
        public void GetSelectIndoorAsync(string Date, string timeRange, string acc, object userState) {
            if ((this.GetSelectIndoorOperationCompleted == null)) {
                this.GetSelectIndoorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSelectIndoorOperationCompleted);
            }
            this.InvokeAsync("GetSelectIndoor", new object[] {
                        Date,
                        timeRange,
                        acc}, this.GetSelectIndoorOperationCompleted, userState);
        }
        
        private void OnGetSelectIndoorOperationCompleted(object arg) {
            if ((this.GetSelectIndoorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSelectIndoorCompleted(this, new GetSelectIndoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpecificIndoor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSpecificIndoor(string Date, string acc) {
            object[] results = this.Invoke("GetSpecificIndoor", new object[] {
                        Date,
                        acc});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpecificIndoorAsync(string Date, string acc) {
            this.GetSpecificIndoorAsync(Date, acc, null);
        }
        
        /// <remarks/>
        public void GetSpecificIndoorAsync(string Date, string acc, object userState) {
            if ((this.GetSpecificIndoorOperationCompleted == null)) {
                this.GetSpecificIndoorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecificIndoorOperationCompleted);
            }
            this.InvokeAsync("GetSpecificIndoor", new object[] {
                        Date,
                        acc}, this.GetSpecificIndoorOperationCompleted, userState);
        }
        
        private void OnGetSpecificIndoorOperationCompleted(object arg) {
            if ((this.GetSpecificIndoorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecificIndoorCompleted(this, new GetSpecificIndoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PictInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PictInsert(string img_url, string acc) {
            this.Invoke("PictInsert", new object[] {
                        img_url,
                        acc});
        }
        
        /// <remarks/>
        public void PictInsertAsync(string img_url, string acc) {
            this.PictInsertAsync(img_url, acc, null);
        }
        
        /// <remarks/>
        public void PictInsertAsync(string img_url, string acc, object userState) {
            if ((this.PictInsertOperationCompleted == null)) {
                this.PictInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPictInsertOperationCompleted);
            }
            this.InvokeAsync("PictInsert", new object[] {
                        img_url,
                        acc}, this.PictInsertOperationCompleted, userState);
        }
        
        private void OnPictInsertOperationCompleted(object arg) {
            if ((this.PictInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PictInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PictSelect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PictSelect(string acc) {
            object[] results = this.Invoke("PictSelect", new object[] {
                        acc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PictSelectAsync(string acc) {
            this.PictSelectAsync(acc, null);
        }
        
        /// <remarks/>
        public void PictSelectAsync(string acc, object userState) {
            if ((this.PictSelectOperationCompleted == null)) {
                this.PictSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPictSelectOperationCompleted);
            }
            this.InvokeAsync("PictSelect", new object[] {
                        acc}, this.PictSelectOperationCompleted, userState);
        }
        
        private void OnPictSelectOperationCompleted(object arg) {
            if ((this.PictSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PictSelectCompleted(this, new PictSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeArrayElements", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ChangeArrayElements() {
            object[] results = this.Invoke("ChangeArrayElements", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ChangeArrayElementsAsync() {
            this.ChangeArrayElementsAsync(null);
        }
        
        /// <remarks/>
        public void ChangeArrayElementsAsync(object userState) {
            if ((this.ChangeArrayElementsOperationCompleted == null)) {
                this.ChangeArrayElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeArrayElementsOperationCompleted);
            }
            this.InvokeAsync("ChangeArrayElements", new object[0], this.ChangeArrayElementsOperationCompleted, userState);
        }
        
        private void OnChangeArrayElementsOperationCompleted(object arg) {
            if ((this.ChangeArrayElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeArrayElementsCompleted(this, new ChangeArrayElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateINFO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateINFO(string phone, string address, string 帳號) {
            object[] results = this.Invoke("updateINFO", new object[] {
                        phone,
                        address,
                        帳號});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateINFOAsync(string phone, string address, string 帳號) {
            this.updateINFOAsync(phone, address, 帳號, null);
        }
        
        /// <remarks/>
        public void updateINFOAsync(string phone, string address, string 帳號, object userState) {
            if ((this.updateINFOOperationCompleted == null)) {
                this.updateINFOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateINFOOperationCompleted);
            }
            this.InvokeAsync("updateINFO", new object[] {
                        phone,
                        address,
                        帳號}, this.updateINFOOperationCompleted, userState);
        }
        
        private void OnupdateINFOOperationCompleted(object arg) {
            if ((this.updateINFOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateINFOCompleted(this, new updateINFOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/showAddressandCell", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet showAddressandCell(string acc, string pwd) {
            object[] results = this.Invoke("showAddressandCell", new object[] {
                        acc,
                        pwd});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void showAddressandCellAsync(string acc, string pwd) {
            this.showAddressandCellAsync(acc, pwd, null);
        }
        
        /// <remarks/>
        public void showAddressandCellAsync(string acc, string pwd, object userState) {
            if ((this.showAddressandCellOperationCompleted == null)) {
                this.showAddressandCellOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshowAddressandCellOperationCompleted);
            }
            this.InvokeAsync("showAddressandCell", new object[] {
                        acc,
                        pwd}, this.showAddressandCellOperationCompleted, userState);
        }
        
        private void OnshowAddressandCellOperationCompleted(object arg) {
            if ((this.showAddressandCellCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.showAddressandCellCompleted(this, new showAddressandCellCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string isPassword(string acc) {
            object[] results = this.Invoke("isPassword", new object[] {
                        acc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void isPasswordAsync(string acc) {
            this.isPasswordAsync(acc, null);
        }
        
        /// <remarks/>
        public void isPasswordAsync(string acc, object userState) {
            if ((this.isPasswordOperationCompleted == null)) {
                this.isPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisPasswordOperationCompleted);
            }
            this.InvokeAsync("isPassword", new object[] {
                        acc}, this.isPasswordOperationCompleted, userState);
        }
        
        private void OnisPasswordOperationCompleted(object arg) {
            if ((this.isPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isPasswordCompleted(this, new isPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update新密碼", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Update新密碼(string 密碼, string 帳號) {
            object[] results = this.Invoke("Update新密碼", new object[] {
                        密碼,
                        帳號});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Update新密碼Async(string 密碼, string 帳號) {
            this.Update新密碼Async(密碼, 帳號, null);
        }
        
        /// <remarks/>
        public void Update新密碼Async(string 密碼, string 帳號, object userState) {
            if ((this.Update新密碼OperationCompleted == null)) {
                this.Update新密碼OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate新密碼OperationCompleted);
            }
            this.InvokeAsync("Update新密碼", new object[] {
                        密碼,
                        帳號}, this.Update新密碼OperationCompleted, userState);
        }
        
        private void OnUpdate新密碼OperationCompleted(object arg) {
            if ((this.Update新密碼Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update新密碼Completed(this, new Update新密碼CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallLineToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CallLineToken(string 帳號) {
            object[] results = this.Invoke("CallLineToken", new object[] {
                        帳號});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallLineTokenAsync(string 帳號) {
            this.CallLineTokenAsync(帳號, null);
        }
        
        /// <remarks/>
        public void CallLineTokenAsync(string 帳號, object userState) {
            if ((this.CallLineTokenOperationCompleted == null)) {
                this.CallLineTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallLineTokenOperationCompleted);
            }
            this.InvokeAsync("CallLineToken", new object[] {
                        帳號}, this.CallLineTokenOperationCompleted, userState);
        }
        
        private void OnCallLineTokenOperationCompleted(object arg) {
            if ((this.CallLineTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallLineTokenCompleted(this, new CallLineTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Login(string acc, string pwd) {
            object[] results = this.Invoke("Login", new object[] {
                        acc,
                        pwd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string acc, string pwd) {
            this.LoginAsync(acc, pwd, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string acc, string pwd, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        acc,
                        pwd}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AccountExist(string acc) {
            object[] results = this.Invoke("AccountExist", new object[] {
                        acc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AccountExistAsync(string acc) {
            this.AccountExistAsync(acc, null);
        }
        
        /// <remarks/>
        public void AccountExistAsync(string acc, object userState) {
            if ((this.AccountExistOperationCompleted == null)) {
                this.AccountExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountExistOperationCompleted);
            }
            this.InvokeAsync("AccountExist", new object[] {
                        acc}, this.AccountExistOperationCompleted, userState);
        }
        
        private void OnAccountExistOperationCompleted(object arg) {
            if ((this.AccountExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountExistCompleted(this, new AccountExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/帳號是否存在", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool 帳號是否存在(string acc) {
            object[] results = this.Invoke("帳號是否存在", new object[] {
                        acc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void 帳號是否存在Async(string acc) {
            this.帳號是否存在Async(acc, null);
        }
        
        /// <remarks/>
        public void 帳號是否存在Async(string acc, object userState) {
            if ((this.帳號是否存在OperationCompleted == null)) {
                this.帳號是否存在OperationCompleted = new System.Threading.SendOrPostCallback(this.On帳號是否存在OperationCompleted);
            }
            this.InvokeAsync("帳號是否存在", new object[] {
                        acc}, this.帳號是否存在OperationCompleted, userState);
        }
        
        private void On帳號是否存在OperationCompleted(object arg) {
            if ((this.帳號是否存在Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.帳號是否存在Completed(this, new 帳號是否存在CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Sign", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Sign(string 帳號, string 密碼, string 姓名, string 身分別, string 身分證字號, string 性別, string 生日, string 地址, string 電話) {
            object[] results = this.Invoke("Sign", new object[] {
                        帳號,
                        密碼,
                        姓名,
                        身分別,
                        身分證字號,
                        性別,
                        生日,
                        地址,
                        電話});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SignAsync(string 帳號, string 密碼, string 姓名, string 身分別, string 身分證字號, string 性別, string 生日, string 地址, string 電話) {
            this.SignAsync(帳號, 密碼, 姓名, 身分別, 身分證字號, 性別, 生日, 地址, 電話, null);
        }
        
        /// <remarks/>
        public void SignAsync(string 帳號, string 密碼, string 姓名, string 身分別, string 身分證字號, string 性別, string 生日, string 地址, string 電話, object userState) {
            if ((this.SignOperationCompleted == null)) {
                this.SignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignOperationCompleted);
            }
            this.InvokeAsync("Sign", new object[] {
                        帳號,
                        密碼,
                        姓名,
                        身分別,
                        身分證字號,
                        性別,
                        生日,
                        地址,
                        電話}, this.SignOperationCompleted, userState);
        }
        
        private void OnSignOperationCompleted(object arg) {
            if ((this.SignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignCompleted(this, new SignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void IdentifyForGPSCompletedEventHandler(object sender, IdentifyForGPSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IdentifyForGPSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IdentifyForGPSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSpecificIndoor1CompletedEventHandler(object sender, GetSpecificIndoor1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecificIndoor1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpecificIndoor1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PosiDataCompletedEventHandler(object sender, PosiDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PosiDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PosiDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SelectLoacationCompletedEventHandler(object sender, SelectLoacationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectLoacationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectLoacationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SelectIndoorCompletedEventHandler(object sender, SelectIndoorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectIndoorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectIndoorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void savedateCompletedEventHandler(object sender, savedateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class savedateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal savedateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetIndoorCurrentDateCompletedEventHandler(object sender, GetIndoorCurrentDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIndoorCurrentDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIndoorCurrentDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SaveObjectPositionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertLocationCompletedEventHandler(object sender, InsertLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSpecificAboveIndoorCompletedEventHandler(object sender, GetSpecificAboveIndoorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecificAboveIndoorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpecificAboveIndoorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSelectAboveIndoorCompletedEventHandler(object sender, GetSelectAboveIndoorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSelectAboveIndoorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSelectAboveIndoorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetOutdoorCompletedEventHandler(object sender, GetOutdoorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutdoorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutdoorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetIndoorCompletedEventHandler(object sender, GetIndoorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIndoorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIndoorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetIndoor1CompletedEventHandler(object sender, GetIndoor1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIndoor1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIndoor1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetIndoorCurrentCompletedEventHandler(object sender, GetIndoorCurrentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIndoorCurrentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIndoorCurrentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetIndoorAboveCompletedEventHandler(object sender, GetIndoorAboveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIndoorAboveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIndoorAboveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSelectIndoorCompletedEventHandler(object sender, GetSelectIndoorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSelectIndoorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSelectIndoorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSpecificIndoorCompletedEventHandler(object sender, GetSpecificIndoorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecificIndoorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpecificIndoorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PictInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PictSelectCompletedEventHandler(object sender, PictSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PictSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PictSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangeArrayElementsCompletedEventHandler(object sender, ChangeArrayElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeArrayElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeArrayElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void updateINFOCompletedEventHandler(object sender, updateINFOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateINFOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateINFOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void showAddressandCellCompletedEventHandler(object sender, showAddressandCellCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class showAddressandCellCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal showAddressandCellCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void isPasswordCompletedEventHandler(object sender, isPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Update新密碼CompletedEventHandler(object sender, Update新密碼CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update新密碼CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update新密碼CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CallLineTokenCompletedEventHandler(object sender, CallLineTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallLineTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallLineTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AccountExistCompletedEventHandler(object sender, AccountExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void 帳號是否存在CompletedEventHandler(object sender, 帳號是否存在CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class 帳號是否存在CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal 帳號是否存在CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SignCompletedEventHandler(object sender, SignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591